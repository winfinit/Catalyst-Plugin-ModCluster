.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "README 3"
.TH README 3 "2014-04-22" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Plugin::ModCluster \- Mod Cluster integration
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Catalyst qw/ModCluster/;
\&    
\&    MyApp\->config({
\&        URI => "http://127.0.0.1:6666",
\&                NodeName => "MyApp1",
\&                Host => "127.0.0.1",
\&                Port => "3000",
\&                Type => "http",
\&                Context => "/myapp,/foo,/bar",
\&                Alias "myapp.example.com",
\&    });
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Plugin registers application node with apache mod_cluster, which allows
you to bring up new nodes in the cluster without modifying your load balancer
configurations.
.PP
When application starts, it will automatically send information to your cluster,
and if node dies, or getting turned off, plugin will update cluster with that information.
.PP
Official documentation for mod_cluster can be found here: https://www.jboss.org/mod_cluster
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
.IP "\(bu" 4
\&\s-1URI\s0
.Sp
URI/address of your cluster, ex: \*(L"http://10.254.1.2:6666\*(R"
you can pass an array of \s-1URI\s0's if you have multiple mod_cluster machines, ie:
	\s-1URI\s0 => [\*(L"http://10.254.1.2:6666\*(R", \*(L"http://10.254.1.4:6666\*(R"]
	# or
	\s-1URI\s0 => \*(L"http://10.254.1.2:6666\*(R",\*(L"http://10.254.1.4:6666\*(R"
.IP "\(bu" 4
NodeName
.Sp
Unique name of your applications node, ex: \*(L"myapp001\*(R"
.IP "\(bu" 4
Type
.Sp
Servers protocol (http/https) of your node, if left blank
\&\f(CW$c\fR\->engine\->env\->{ \s-1SERVER_PROTOCOL \s0} will be used when possible,
otherwise application will fail to start
.IP "\(bu" 4
Host
.Sp
Hostname or \s-1IP\s0 address of your node. ex: 10.254.1.3, if
left blank, \f(CW$c\fR\->engine\->env\->{ \s-1SERVER_ADDR \s0} will be used when possible,
otherwise application will fail to start
.IP "\(bu" 4
Port
.Sp
Port number of your application. ex: 8080, if
left blank, \f(CW$c\fR\->engine\->env\->{ \s-1SERVER_PORT \s0} will be used when possible,
otherwise application will fail to start
.IP "\(bu" 4
Context
.Sp
Array or comma separated list of contexts that you want to register with cluster,
	Context => ['/myapp', '/foo', '/bar'],
	# or 
	Context => \*(L"/myapp,/foo,/bar\*(R"
.IP "\(bu" 4
Alias
.Sp
Server aliases that would be added to your apache virtual host on mod_cluster,
if not specified, default one will be used (\*(L"CatalystApp\*(R")
.SH "SUPPORT"
.IX Header "SUPPORT"
Please report all bugs via github at
https://github.com/winfinit/Net\-MCMP
.SH "AUTHOR"
.IX Header "AUTHOR"
Roman Jurkov (winfinit) <winfinit@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2014 the Catalyst::Plugin::ModCluster \*(L"\s-1AUTHORS\*(R"\s0 as listed above.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software, you can redistribute it and/or modify it
under the same terms as Perl itself.
